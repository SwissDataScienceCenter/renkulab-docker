name: Renku Docker Image CI

on: [push]

env:
  DOCKER_NAME: "renku/renkulab"

jobs:

  lint:
    strategy:
      fail-fast: true
      matrix:
        DOCKERFILE_PATH:
        - docker/py/Dockerfile
        - docker/r/Dockerfile
        - docker/cuda/Dockerfile
        - docker/cuda-tf/Dockerfile
        - docker/generic/Dockerfile
        - docker/vnc/Dockerfile
        - docker/matlab/Dockerfile
        - docker/julia/Dockerfile
        - docker/batch/Dockerfile
        - docker/qgis/Dockerfile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 
    - uses: hadolint/hadolint-action@v2.0.0
      with:
        dockerfile: ${{ matrix.DOCKERFILE_PATH }}
        config: .hadolint.yaml

  build-py:
    needs: lint
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        BASE_IMAGE_TAG:
          - lab-3.2.1
          - python-3.9.7
          - python-3.8.8
          - python-3.7.6

    steps:
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.RENKU_DOCKER_USERNAME }}
        password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

    - uses: actions/checkout@v2
    - name: Build renku project python-based docker images
      id: build-image
      run: |
        if [[ ${{ github.ref }} == refs/tags* ]]; then
          export LABEL=$(echo ${{ github.ref }} | cut -d / -f 3)
        else
          export LABEL=$(echo ${{ github.sha }} | cut -c 1-7)
        fi

        # This ensures the same image tags as before are built, in addition to new ones
        if [[ "${{ matrix.BASE_IMAGE_TAG }}" == lab-* ]]; then
          export LABEL_PREFIX=3.9
        else
          export LABEL_PREFIX=${{ matrix.BASE_IMAGE_TAG }}
        fi

        docker build docker/py --tag $DOCKER_NAME-py:$LABEL_PREFIX-$LABEL --build-arg BASE_IMAGE="jupyter/base-notebook:${{ matrix.BASE_IMAGE_TAG }}"
        echo "::set-output name=IMAGE_NAME::$DOCKER_NAME-py:$LABEL_PREFIX-$LABEL"
    - name: Image Acceptance Tests
      uses: cypress-io/github-action@v2
      env:
        TEST_IMAGE_NAME: ${{ steps.build-image.outputs.IMAGE_NAME }}
        TEST_USER_NAME: jovyan
      with:
        working-directory: tests
        command: npx mocha test.js
    - name: Push to docker
      run: |
        docker push ${{ steps.build-image.outputs.IMAGE_NAME }}

        # on master push latest image - the lab-* image is tagged latest
        if [ "$REF" == "refs/heads/master" ] && [ "${{ matrix.BASE_IMAGE_TAG }}" == lab-* ]; then
          docker tag ${{ steps.build-image.outputs.IMAGE_NAME }} $DOCKER_NAME-py:latest
          docker push $DOCKER_NAME-py:latest
        fi

  build-py-ext:
    needs: build-py
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        EXTENSIONS:
          - vnc

    steps:
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.RENKU_DOCKER_USERNAME }}
        password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

    - uses: actions/checkout@v2
    - name: Build renku project python-based docker image extensions
      run: |
        if [[ ${{ github.ref }} == refs/tags* ]]; then
          export LABEL=$(echo ${{ github.ref }} | cut -d / -f 3)
        else
          export LABEL=$(echo ${{ github.sha }} | cut -c 1-7)
        fi

        docker build docker/$EXTENSION \
          --build-arg BASE_IMAGE="$DOCKER_NAME-py:3.9-$LABEL" \
          --tag $DOCKER_NAME-$EXTENSION:$LABEL
        docker push $DOCKER_NAME-$EXTENSION:$LABEL
      env:
        EXTENSION: ${{ matrix.EXTENSIONS }}

  build-cuda:
    needs: build-py
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        include:
          # taken from tensorflow compatibility chart at https://www.tensorflow.org/install/source#gpu
          - CUDA_VERSION: "11.0"
            PYTHON_VERSION: "3.8.8"
            EXTRA_LIBRARIES: "libcusolver-11-2"
            CUDA_CUDART_PACKAGE: "cuda-cudart-11-0=11.0.221-1"
            CUDA_COMPAT_PACKAGE: "cuda-compat-11-0"
            LIBCUDNN_PACKAGE: "libcudnn8=8.0.5.39-1+cuda11.0"
          - CUDA_VERSION: "11.1"
            PYTHON_VERSION: "3.8.8"
            EXTRA_LIBRARIES: "libcusolver-11-2"
            CUDA_CUDART_PACKAGE: "cuda-cudart-11-1=11.1.74-1"
            CUDA_COMPAT_PACKAGE: "cuda-compat-11-1"
            LIBCUDNN_PACKAGE: "libcudnn8=8.0.5.39-1+cuda11.1"
          - CUDA_VERSION: "11.2"
            PYTHON_VERSION: "3.9.7"
            EXTRA_LIBRARIES: ""
            CUDA_CUDART_PACKAGE: "cuda-cudart-11-2=11.2.152-1"
            CUDA_COMPAT_PACKAGE: "cuda-compat-11-2"
            LIBCUDNN_PACKAGE: "libcudnn8=8.1.1.33-1+cuda11.2"
          - CUDA_VERSION: "11.3"
            PYTHON_VERSION: "3.9.7"
            EXTRA_LIBRARIES: ""
            CUDA_CUDART_PACKAGE: "cuda-cudart-11-3=11.3.109-1"
            CUDA_COMPAT_PACKAGE: "cuda-compat-11-3"
            LIBCUDNN_PACKAGE: "libcudnn8=8.2.1.32-1+cuda11.3"
          - CUDA_VERSION: "11.4"
            PYTHON_VERSION: "3.9.7"
            EXTRA_LIBRARIES: ""
            CUDA_CUDART_PACKAGE: "cuda-cudart-11-4=11.4.148-1"
            CUDA_COMPAT_PACKAGE: "cuda-compat-11-4"
            LIBCUDNN_PACKAGE: "libcudnn8=8.2.4.15-1+cuda11.4"
          - CUDA_VERSION: "11.5"
            PYTHON_VERSION: "3.9.7"
            EXTRA_LIBRARIES: ""
            CUDA_CUDART_PACKAGE: "cuda-cudart-11-5=11.5.117-1"
            CUDA_COMPAT_PACKAGE: "cuda-compat-11-5"
            LIBCUDNN_PACKAGE: "libcudnn8=8.3.2.44-1+cuda11.5"

    steps:
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.RENKU_DOCKER_USERNAME }}
        password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

    - uses: actions/checkout@v2
    - name: Build renku project python-based docker image extensions
      id: build-image
      run: |
        cd docker/cuda

        if [[ ${{ github.ref }} == refs/tags* ]]; then
          export LABEL=$(echo ${{ github.ref }} | cut -d / -f 3)
        else
          export LABEL=$(echo ${{ github.sha }} | cut -c 1-7)
        fi

        docker build . \
          --build-arg BASE_IMAGE="renku/renkulab-py:python-${{ matrix.PYTHON_VERSION }}-$LABEL" \
          --build-arg CUDA_VERSION="${{ matrix.CUDA_VERSION }}" \
          --build-arg EXTRA_LIBRARIES="${{ matrix.EXTRA_LIBRARIES }}" \
          --build-arg CUDA_CUDART_PACKAGE="${{ matrix.CUDA_CUDART_PACKAGE }}" \
          --build-arg CUDA_COMPAT_PACKAGE="${{ matrix.CUDA_COMPAT_PACKAGE }}" \
          --build-arg LIBCUDNN_PACKAGE="${{ matrix.LIBCUDNN_PACKAGE }}" \
          --tag $DOCKER_NAME-cuda:${{ matrix.CUDA_VERSION }}-$LABEL
        echo "::set-output name=IMAGE_NAME::$DOCKER_NAME-cuda:${{ matrix.CUDA_VERSION }}-$LABEL"
    - name: Image Acceptance Tests
      uses: cypress-io/github-action@v2
      env:
        TEST_IMAGE_NAME: ${{ steps.build-image.outputs.IMAGE_NAME }}
        TEST_USER_NAME: jovyan
      with:
        working-directory: tests
        command: npx mocha test.js
    - name: Push to docker
      run: |
        docker push ${{ steps.build-image.outputs.IMAGE_NAME }}

        # on master push latest image
        if [ "$REF" == "refs/heads/master" ] && [ "${{ matrix.CUDA_VERSION }}" == "11.5" ]; then
          docker tag ${{ steps.build-image.outputs.IMAGE_NAME }} $DOCKER_NAME-cuda:latest
          docker push $DOCKER_NAME-cuda:latest
        fi

  build-cuda-tf:
    needs: build-cuda
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        include:
          # taken from tensorflow compatibility chart at https://www.tensorflow.org/install/source#gpu
          - TF_VERSION: "2.4"
            CUDA_VERSION: "11.0"
          - TF_VERSION: "2.7"
            CUDA_VERSION: "11.2"
          - TF_VERSION: "2.9"
            CUDA_VERSION: "11.2"

    steps:
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.RENKU_DOCKER_USERNAME }}
        password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

    - uses: actions/checkout@v2
    - name: Build renku project python-based docker image extensions
      id: build-image
      run: |
        cd docker/cuda-tf

        if [[ ${{ github.ref }} == refs/tags* ]]; then
          export LABEL=$(echo ${{ github.ref }} | cut -d / -f 3)
        else
          export LABEL=$(echo ${{ github.sha }} | cut -c 1-7)
        fi

        docker build . \
          --build-arg BASE_IMAGE="$DOCKER_NAME-cuda:${{ matrix.CUDA_VERSION }}-$LABEL" \
          --build-arg TF_PACKAGE_VERSION="${{ matrix.TF_VERSION }}" \
          --tag $DOCKER_NAME-cuda-tf:${{ matrix.CUDA_VERSION }}-tf-${{ matrix.TF_VERSION }}-$LABEL
        echo "::set-output name=IMAGE_NAME::$DOCKER_NAME-cuda-tf:${{ matrix.CUDA_VERSION }}-tf-${{ matrix.TF_VERSION }}-$LABEL"
    - name: Image Acceptance Tests
      uses: cypress-io/github-action@v2
      env:
        TEST_IMAGE_NAME: ${{ steps.build-image.outputs.IMAGE_NAME }}
        TEST_USER_NAME: jovyan
      with:
        working-directory: tests
        command: npx mocha test.js
    - name: Push to docker
      run: |
        docker push ${{ steps.build-image.outputs.IMAGE_NAME }}

  build-vnc-ext:
    needs: build-py-ext
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        VNC-EXTENSIONS:
          - matlab
          - qgis

    steps:
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.RENKU_DOCKER_USERNAME }}
        password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

    - uses: actions/checkout@v2
    - name: Build renku project python-based docker image extensions
      run: |
        if [[ ${{ github.ref }} == refs/tags* ]]; then
          export LABEL=$(echo ${{ github.ref }} | cut -d / -f 3)
        else
          export LABEL=$(echo ${{ github.sha }} | cut -c 1-7)
        fi

        docker build docker/$EXTENSION \
          --build-arg BASE_IMAGE="$DOCKER_NAME-vnc:$LABEL" \
          --tag $DOCKER_NAME-$EXTENSION:$LABEL
        docker push $DOCKER_NAME-$EXTENSION:$LABEL
      env:
        EXTENSION: ${{ matrix.VNC-EXTENSIONS }}
        DOCKER_NAME: "renku/renkulab"
  
  build-py-batch:
    needs: build-py
    runs-on: ubuntu-latest

    steps:
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.RENKU_DOCKER_USERNAME }}
        password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

    - uses: actions/checkout@v2
    - name: Build renku project python-based docker image for batch execution
      run: |
        if [[ ${{ github.ref }} == refs/tags* ]]; then
          export LABEL=$(echo ${{ github.ref }} | cut -d / -f 3)
        else
          export LABEL=$(echo ${{ github.sha }} | cut -c 1-7)
        fi

        docker build docker/batch \
          --build-arg RENKU_BASE="$DOCKER_NAME-py:3.9-$LABEL" \
          --build-arg BASE_IMAGE="python:3.9-slim-buster" \
          --tag $DOCKER_NAME-batch:$LABEL
        docker push $DOCKER_NAME-batch:$LABEL
      env:
        DOCKER_NAME: "renku/renkulab"

  build-julia-ext:
    needs: build-py
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        JULIAVERSIONS:
          - 1.7.1

    steps:
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.RENKU_DOCKER_USERNAME }}
        password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

    - uses: actions/checkout@v2
    - name: Build renku project julia docker image extensions
      id: build-image
      run: |
        if [[ ${{ github.ref }} == refs/tags* ]]; then
          export LABEL=$(echo ${{ github.ref }} | cut -d / -f 3)
        else
          export LABEL=$(echo ${{ github.sha }} | cut -c 1-7)
        fi

        export DOCKER_TAG="${{ matrix.JULIAVERSIONS }}-$LABEL"
        docker build docker/julia \
          --build-arg BASE_IMAGE="$DOCKER_NAME-py:3.9-$LABEL" \
          --tag $DOCKER_NAME-julia:$DOCKER_TAG
        echo "::set-output name=IMAGE_NAME::$DOCKER_NAME-julia:$DOCKER_TAG"
    - name: Image Acceptance Tests
      uses: cypress-io/github-action@v2
      env:
        TEST_IMAGE_NAME: ${{ steps.build-image.outputs.IMAGE_NAME }}
        TEST_USER_NAME: jovyan
      with:
        working-directory: tests
        command: npx mocha test.js
    - name: Push to docker
      run: |
        docker push ${{ steps.build-image.outputs.IMAGE_NAME }}

  build-r-ubuntu:
    needs: build-py
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        include:
          - RVERSION: 3.4.3
            RSTUDIO_VERSION: 2022.02.3-492
    steps:
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.RENKU_DOCKER_USERNAME }}
        password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

    - uses: actions/checkout@v2
    - name: Build renku project rocker docker images
      id: build-image
      run: |
        if [[ ${{ github.ref }} == refs/tags* ]]; then
          export LABEL=$(echo ${{ github.ref }} | cut -d / -f 3)
        else
          export LABEL=$(echo ${{ github.sha }} | cut -c 1-7)
        fi

        export DOCKER_TAG="${{ matrix.RVERSION }}-$LABEL"
        docker build docker/r \
          --build-arg RENKU_BASE="$DOCKER_NAME-py:3.9-$LABEL" \
          --build-arg BASE_IMAGE="rocker/verse:${{ matrix.RVERSION }}" \
          --build-arg RSTUDIO_VERSION_OVERRIDE="${{ matrix.RSTUDIO_VERSION }}" \
          --tag $DOCKER_NAME-r:$DOCKER_TAG
        
        echo "::set-output name=IMAGE_NAME::$DOCKER_NAME-r:$DOCKER_TAG"
    - name: Image Acceptance Tests
      uses: cypress-io/github-action@v2
      env:
        TEST_IMAGE_NAME: ${{ steps.build-image.outputs.IMAGE_NAME }}
        TEST_USER_NAME: rstudio
      with:
        working-directory: tests
        command: npx mocha test.js
    - name: Push to docker
      run: |
        docker push ${{ steps.build-image.outputs.IMAGE_NAME }}

        # on master push latest image
        if [ "$REF" == "refs/heads/master" ] && [ "${{ matrix.RVERSION }}" == "4.2.0" ]
        then
          docker tag ${{ steps.build-image.outputs.IMAGE_NAME }} $DOCKER_NAME-r:latest
          docker push $DOCKER_NAME-r:latest
        fi

  build-bioc:
    needs: build-py
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        RELEASE:
          - RELEASE_3_14
          - RELEASE_3_15
          - devel
    steps:
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.RENKU_DOCKER_USERNAME }}
        password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

    - uses: actions/checkout@v2
    - name: Build renku project bioconductor docker images
      run: |
        if [[ ${{ github.ref }} == refs/tags* ]]; then
          export LABEL=$(echo ${{ github.ref }} | cut -d / -f 3)
        else
          export LABEL=$(echo ${{ github.sha }} | cut -c 1-7)
        fi

        export DOCKER_TAG="${{ matrix.RELEASE }}-$LABEL"
        docker build docker/r \
          --build-arg RENKU_BASE="$DOCKER_NAME-py:3.9-$LABEL" \
          --build-arg BASE_IMAGE=bioconductor/bioconductor_docker:${{ matrix.RELEASE }} \
          --tag $DOCKER_NAME-bioc:$DOCKER_TAG
        docker push $DOCKER_NAME-bioc:$DOCKER_TAG

        # on master push latest image
        if [ "$REF" == "refs/heads/master" ] && [ "${{ matrix.RELEASE }}" == "devel" ]
        then
          docker tag $DOCKER_NAME-bioc:$DOCKER_TAG $DOCKER_NAME-bioc:latest
          docker push $DOCKER_NAME-bioc:latest
        fi
